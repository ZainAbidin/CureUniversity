https://www.scrumguides.org/scrum-guide.html



-----------------------------------------------------
SCRIPT without table populate
-----------------------------------------------------
USE [Cure_University]
GO

/****** Object:  Table [dbo].[Employees]    Script Date: 10/28/2020 2:38:40 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Users](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[School_ID] [int],
	[First_Name] [nvarchar](20) NULL,
	[Last_Name] [nvarchar](20) NULL,
	[Adress] [nvarchar](80) NULL,
	[Email] [nvarchar] (50) NULL,
	[Contact_Number] [varchar](12) NULL,
 CONSTRAINT [PK_Employees] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



ALTER TABLE Users
ADD Username VARCHAR(40)
ALTER TABLE Users
ADD PRIMARY KEY(ID)

CREATE TABLE Roles (Email VARCHAR(40), [Role] VARCHAR(10), [Password] VARCHAR(10))




CREATE OR ALTER PROCEDURE spCheckCredentials
@Email NVARCHAR(40),
@Password VARCHAR(10)
AS
BEGIN
	SELECT [Role] FROM Roles WHERE (Email=REPLACE(@Email,'%40','@') AND [Password]=@Password)
END

EXEC VerifyUser 1582,'asdfzxc'


CREATE OR ALTER PROCEDURE spstudentSignup
@Email NVARCHAR(40),
@FirstName VARCHAR(20),
@LastName VARCHAR(20),
@Address VARCHAR(80),
@SchoolId INT,
@Contact_Number VARCHAR(12),
@Password VARCHAR(20),
@Username VARCHAR(40)
AS
DECLARE @ResultValue int 

If(SELECT 1 FROM Users WHERE Email = REPLACE(@Email,'%40','@')) > 0
BEGIN
	SET  @ResultValue = 0  --user exists
END
ELSE
BEGIN
	INSERT INTO Users(School_ID,First_Name,Last_Name,Adress,Email,Contact_Number,Username)
	VALUES (@SchoolId,@FirstName,@LastName,@Address,REPLACE(@Email,'%40','@'),@Contact_Number,@Username)
	INSERT INTO Roles(Email,[Role],[Password])
	VALUES (REPLACE(@Email,'%40','@'),'Student',@Password)
	INSERT INTO COURSES(SchoolId,Course)
	VALUES (@SchoolId,'')
	SET  @ResultValue = 1  --new user is registered
END

CREATE TABLE COURSES (SchoolId INT, Course VARCHAR(60))
--------------------------------------------------------------------------------------------------------
---------------------------------SP To Register Course By Student---------------------------------------


CREATE OR ALTER PROCEDURE spCourseRegister
@Email NVARCHAR (100),
@CourseName VARCHAR(20)
AS
BEGIN

	IF(((SELECT 1 FROM (SELECT * FROM COURSES WHERE SchoolId = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@'))) AS Coursess WHERE Course = @CourseName)) > 0)
	BEGIN
	PRINT'ALREADY REGISTERED IN THIS COURSE'
	SELECT 0
	END
	ELSE
	BEGIN
	INSERT INTO COURSES(SchoolId, Course)
	SELECT School_ID,@CourseName FROM Users WHERE Email=REPLACE(@Email,'%40','@')
	SELECT 1
	PRINT'Course Registered'
	END
END
-------------------------------------------------------------------------------------------------------
EXECUTE spCourseRegister 2585,'Thermodynamics'
SELECT * FROM COURSES
DELETE FROM COURSES WHERE Course = '@CourseName'

-------------------------------------------------------------------------------------------------------
---------------------------------------sp To show the number of credit hours registered----------------

CREATE OR ALTER PROCEDURE spShowCredits
@Email NVARCHAR(50)
AS
BEGIN

	SELECT SUM(CreditHours)
	FROM (	SELECT CourseDetails.CreditHours 
	FROM (SELECT SchoolId,Course FROM COURSES WHERE SchoolId = ((SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))) AS Tabl
	INNER JOIN CourseDetails
	ON CourseDetails.CourseName = Tabl.Course) AS CreditHours
	
END

EXECUTE spShowCredits 'zain@gmail.com'
-------------------------------------------------------------------------------------------------------



------------------------------------SP to update the student profile----------------------------------
CREATE OR ALTER PROCEDURE spUpdateStudent
@reference VARCHAR(100),
@Username VARCHAR(100),
@FirstName VARCHAR(100),
@LastName VARCHAR(100),
@Contact_Number VARCHAR(100),
@Email NVARCHAR(100),
@Address VARCHAR(500)

AS

BEGIN
	UPDATE Users SET First_Name = @FirstName, Last_Name = @LastName, Adress = @Address, Email = REPLACE(@Email,'%40','@'), Contact_Number = @Contact_Number, Username=@Username WHERE School_ID = (SELECT School_ID FROM Users WHERE Email=@reference)
	SELECT 1
END
GO

--------------------------------------------------------------------------------------------------------
EXEC spUpdateStudent 'zain@gmail.com','','','','','',''
SELECT * FROM Users

UPDATE Users SET First_Name = '', Last_Name = '', Adress = '', Email = '', Contact_Number = '', Username='' WHERE School_ID = (SELECT School_ID FROM Users WHERE Email='omer.saleem@lhr.edu.pk')

exec spUpdateStudent @Email=N'zain@gmail.com',@Address=N'Khuram Block, Canal Bank',@FirstName=N'zain',@LastName=N'ddddddddddddd',@reference=N'zain@gmail.com',@Contact_Number=N'332-4323914',@Username=N'zain.abidin'

exec spUpdateStudent @Email=N'my.saleem@gmail.com',@Address=N'kfjhags',@FirstName=N'myName',@LastName=N'alskfjfas',
@reference=N'omer.saleem@gmail.com',@Contact_Number=N'552-9632587',@Username=N'z.s'

UPDATE Users SET First_Name = 'lkdjfl', Last_Name = 'alskfjfas', Adress = 'kfjhags', Email = 'omer.saleem@gmail.com', Contact_Number = '552-9632587', 
Username='z.s' WHERE School_ID = (SELECT School_ID FROM Users WHERE Email='omer.saleem@lhr.edu.pk')

SELECT School_ID FROM Users WHERE Email='omer.saleem@lhr.edu.pk'

---------------------------------Sp to suspend OR Block the entity--------------------------------------

ALTER TABLE Users
ADD Activity VARCHAR(9)

CREATE OR ALTER PROCEDURE spSuspend
@SchoolID INT,
@Choice INT
AS
BEGIN
			if(@Choice = 0)
			BEGIN
			if(select 1 from Users where School_ID = @SchoolID AND Activity='Active') > 0
			BEGIN
			update Users set Activity='Blocked' where School_ID = @SchoolID
			SELECT 0
			END
			ELSE IF (select 1 from Users where School_ID = @SchoolID) > 0
			BEGIN
			update Users set Activity='Active' where School_ID = @SchoolID
			SELECT 0
			END
			END
			ELSE IF(@Choice = 1)
			BEGIN
			if(select 1 from Users where School_ID = @SchoolID AND Activity='Active') > 0
			BEGIN
			update Users set Activity='Suspended' where School_ID = @SchoolID
			SELECT 0
			END
			ELSE IF (select 1 from Users where School_ID = @SchoolID) > 0
			BEGIN
			update Users set Activity='Active' where School_ID = @SchoolID
			SELECT 0
			END
			END
			ELSE
			BEGIN
			SELECT 1
			END
END

-------------------------------------------------------------------------------------------------------
EXECUTE spSuspend 1552,0
-------------------------------------------------------------------------------------------------------

---------------------------------SP to view all Students by Admin-----------------------------------------------
		CREATE VIEW [All students]
		AS
		SELECT School_ID, First_Name, Last_Name, Adress, Email, Contact_Number, Username, Activity, COURSES.Course
		FROM Users 
		LEFT join COURSES
		ON Users.School_ID = SchoolId WHERE (School_ID < 4000)

CREATE OR ALTER PROCEDURE spViewAllStudents
AS
BEGIN 

		SELECT * FROM [All students]

END
------------------------------------------------------------------------------------------------------
EXECUTE spViewAllStudents
------------------------------------------------------------------------------------------------------


---------------------------------SP to view all Teachers----------------------------------------------
		CREATE VIEW [All Teachers]
		AS
		SELECT School_ID, First_Name, Last_Name, Adress, Email, Contact_Number, Username, Activity, COURSES.Course
		FROM Users 
		LEFT join COURSES
		ON Users.School_ID = SchoolId WHERE (School_ID < 7000) AND (School_ID > 5999)
CREATE OR ALTER PROCEDURE spViewAllTeachers
AS
BEGIN
		SELECT * FROM [All Teachers]
END
------------------------------------------------------------------------------------------------------
EXECUTE spViewAllTeachers
------------------------------------------------------------------------------------------------------

CREATE TABLE [dbo].[Messages] (SchoolID INT, [Message] VARCHAR(80))

---------------------------------SP to Send Message---------------------------------------------------
CREATE OR ALTER PROCEDURE spMessage
@Reference VARCHAR(50),
@Email VARCHAR(50),
@message VARCHAR(255)
AS
BEGIN
	SELECT 1 FROM [dbo].[Messages] WHERE SchoolID = ((SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))
	UPDATE [dbo].[Messages] SET [Message] = CONCAT([Message],'. ' + @message +'-' + (SELECT First_Name FROM Users WHERE Email=REPLACE(@Reference,'%40','@'))) WHERE 
	SchoolID =((SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))

END
----------------------------------------------------------------------------------------------------
EXECUTE spMessage 'omer.saleem@lhr.edu.pk','Hello'
----------------------------------------------------------------------------------------------------
---------------------------------SP to Admin Send Message---------------------------------------------------
CREATE OR ALTER PROCEDURE spAdminMessage
@Schoolid VARCHAR(50),
@message VARCHAR(255)
AS
BEGIN
	SELECT 1 FROM [dbo].[Messages] WHERE SchoolID = @Schoolid
	UPDATE [dbo].[Messages] SET [Message] = CONCAT([Message],'. ' + @message +'-' + 'Admin') WHERE 
	SchoolID = @Schoolid

END
----------------------------------------------------------------------------------------------------

-----------------------SP to read messages---------------------------------------------------------

CREATE OR ALTER PROCEDURE spReadMessage
@Email VARCHAR(50)
AS
BEGIN
	SELECT [Message] FROM [dbo].[Messages] WHERE SchoolID=((SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))
END

--------------------------------------------------------------------------------------------------
EXECUTE spReadMessage 'omer.saleem@lhr.edu.pk'
--------------------------------------------------------------------------------------------------
-----------------------------------SP View Teachers for a specific course-------------------------

CREATE OR ALTER PROCEDURE spChooseTeacher
@Course VARCHAR(20)
AS
BEGIN
	SELECT * FROM COURSES WHERE Course = @Course
END

--------------------------------------------------------------------------------------------------
EXECUTE spChooseTeacher 'Calculus,'
--------------------------------------------------------------------------------------------------

-------------------------------------sp to select a single row form the users table --------------

CREATE OR ALTER PROCEDURE spuserIdentify 'omer.saleem@lhr.edu.pk'
@Email NVARCHAR(40)
AS
BEGIN
	SELECT * FROM Users WHERE School_ID =  (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@'))

END
---------------------------------------------------------------------------------------------------
---------------------------------------Table creation Course details-------------------------------
CREATE Table CourseDetails (CourseName VARCHAR(40), CreditHours INT)
---------------------------------------------------------------------------------------------------


SELECT *FROM Users
SELECT *FROM [Roles]
SELECT *FROM COURSES
SELECT * FROM CourseDetails
SELECT * FROM [Messages]

--------------------------------------------------------------------------------------------------
----------------------------Sp to show courses to the student-------------------------------------
CREATE OR ALTER PROCEDURE spShowCourses
AS
BEGIN
	SELECT CourseName, CreditHours FROM CourseDetails
END

--------------------------------------------------------------------------------------------------
----------------------------Sp to show Teachers to the student------------------------------------
CREATE OR ALTER PROCEDURE spShowTeacher
@CourseName VARCHAR(50)
AS
BEGIN
SELECT TAB2.First_Name FROM(SELECT * FROM (SELECT * FROM (SELECT SchoolId FROM COURSES WHERE COURSE = @CourseName)
AS ID WHERE (SchoolID > 5999 AND SchoolID <6999)) AS TAB1
INNER JOIN USERS
ON TAB1.SchoolId = Users.School_ID) AS TAB2
END
EXECUTE spShowTeacher 'Islamiat'
--------------------------------------------------------------------------------------------------

-----------------------------SP to show the courses registered -----------------------------------
CREATE OR ALTER PROCEDURE spShowRegisteredCourse
@Email NVARCHAR(50)
AS
BEGIN
	SELECT Course FROM COURSES WHERE SchoolId = ((SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))
END
---------------------------------------------------------------------------------------------------
EXECUTE spShowRegisteredCourse 'omer.saleem@lhr.edu.pk'

------------------------------------ALTER TABLE COURSS---------------------------------------------
ALTER TABLE COURSES
ADD Quiz_Name VARCHAR(50)
ALTER TABLE COURSES
ADD Quiz_Type VARCHAR(50)
ALTER TABLE COURSES
ADD Quiz_Data VARCHAR(MAX)
ALTER TABLE COURSES
ADD Quiz_Score INT
ALTER TABLE COURSES
DROP COLUMN Assignment1;
SELECT * FROM COURSES
ALTER TABLE COURSES
ADD Mode_Of_Study VARCHAR(6)
--------------------------------------------------------------------------------------------------
----------------------------------SP to upload Assignment by the student--------------------------
CREATE OR ALTER PROCEDURE spUploadAssignment
@Email NVARCHAR(50),
@Course VARCHAR(20),
@Assignment_Name VARCHAR(50),
@Assignment_Type VARCHAR(50),
@Assignment_Data VARCHAR(MAX)
AS
BEGIN

	UPDATE [dbo].[COURSES] SET [Assignment_Name] = @Assignment_Name, [Assignment_Type] = @Assignment_Type, [Assignment_Data] = @Assignment_Data
	WHERE  (SchoolId = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')) AND COURSES.Course =@Course)														
END
--------------------------------------------------------------------------------------------------
----------------------------------Sp to edit course by the teacher--------------------------------
CREATE OR ALTER PROCEDURE spEditCourse
@CourseRefrence VARCHAR(20),
@CourseName VARCHAR(20),
@CourseCredits INT
AS
BEGIN
	UPDATE CourseDetails SET CourseName = @CourseName, CreditHours = @CourseCredits WHERE CourseName = @CourseRefrence
	UPDATE COURSES SET Course = @CourseName WHERE Course = @CourseRefrence
END
--------------------------------------------------------------------------------------------------
-------------------------------Sp to let student choose mode of study-----------------------------
CREATE OR ALTER PROCEDURE spModeOfStudy
@Email VARCHAR(50),
@Mode VARCHAR (6),
@Course VARCHAR (50)
AS
BEGIN
	UPDATE COURSES SET Mode_Of_Study = @Mode 
	WHERE (SchoolId = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')) AND Course = @Course)
END
--------------------------------------------------------------------------------------------------
execute spModeOfStudy 'zain@gmail.com','Online','Calculus'

SELECT * FROM COURSES
-------------------------------------------------------------------------------------------------
CREATE TABLE Teacher (Student INT, Teacher INT)
--------------------------------------sp to choose teacher----------------------------------------

CREATE OR ALTER PROCEDURE spChooseTeacher
@name VARCHAR(50),
@Email VARCHAR(50)
AS
BEGIN
	INSERT INTO Teacher (Student, Teacher)
	VALUES ((SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')), (SELECT School_ID FROM Users WHERE First_Name= @name))
END

EXECUTE spChooseTeacher 'Faisal','zain@gmail.com'
-----------------------------------------------------------------------------------------------
-----------------------------Sp to show the uploaded assignments to the teacher-------------------
CREATE OR ALTER PROCEDURE spShowAssignments
@Email VARCHAR(50),
@Course VARCHAR(50)
AS
BEGIN
	SELECT Assignment_Name FROM COURSES WHERE Course = @Course AND SchoolId = (SELECT Student FROM Teacher WHERE Teacher = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))
END
--------------------------------------------------------------------------------------------------
-------------------------------SP to upload assignment score--------------------------------------
CREATE OR ALTER PROCEDURE spuploadAssignmentScore 
@Score INT,
@Email VARCHAR(50),
@Course VARCHAR(50)
AS
BEGIN
	UPDATE COURSES SET Assignmnet_Score = @Score WHERE Assignment_Name = (SELECT Assignment_Name FROM COURSES WHERE Course = @Course AND SchoolId = (SELECT Student FROM Teacher WHERE Teacher = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@'))))
END
--------------------------------------------------------------------------------------------------
-----------------------------------------------Sp to upload quiz----------------------------------
CREATE OR ALTER PROCEDURE spUploadQuiz
@Email NVARCHAR(50),
@Course VARCHAR(20),
@Quiz_Name VARCHAR(50),
@Quiz_Type VARCHAR(50),
@Quiz_Data VARCHAR(MAX)
AS
BEGIN

	UPDATE [dbo].[COURSES] SET [Quiz_Name] = @Quiz_Name, [Quiz_Type] = @Quiz_Type, [Quiz_Data] = @Quiz_Data
	WHERE  (SchoolId = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')) AND COURSES.Course =@Course)														
END
--------------------------------------------------------------------------------------------------
----------------------------------Sp to show teacher the students s/he teachers-------------------
CREATE OR ALTER PROCEDURE spShowStudentsTaught
@Email VARCHAR(50)
AS
BEGIN
	SELECT School_Id,First_Name, Email FROM Users WHERE
	School_ID = (SELECT DISTINCT Student FROM Teacher WHERE Teacher = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))
END
-------------------------------------------------------------------------------------------------
-----------------SP for teacher to block student-------------------------------------------------
CREATE OR ALTER PROCEDURE spTeacherBlockStudent
@Email VARCHAR(50),
@Reference VARCHAR(50)
AS
BEGIN
	update Users set Activity='Blocked' where 
	School_ID =	(SELECT DISTINCT Student FROM Teacher WHERE (Teacher = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Reference,'%40','@'))) AND Student = (SELECT School_ID FROM Users WHERE Email=REPLACE(@Email,'%40','@')))
END
-------------------------------------------------------------------------------------------------

CREATE TABLE Videos (Teacher INT, Course VARCHAR(20), VideoLink VARCHAR(100))
Alter TABLE Videos
add VideoName VARCHAR(50)
-----------------------------SP to Upload Videos by teacher--------------------------------------
CREATE OR ALTER PROCEDURE spUploadVideo
@Reference VARCHAR(50),
@Course VARCHAR(20),
@Link VARCHAR(100),
@Name VARCHAR(50)
AS
BEGIN
	INSERT INTO Videos (Teacher,Course,VideoLink,VideoName)
	VALUES((SELECT School_ID FROM Users WHERE Email=REPLACE(@Reference,'%40','@')),@Course,@Link,@Name)
END
-------------------------------------------------------------------------------------------------
----------------------Sp to download Video Link--------------------------------------------------
CREATE OR ALTER PROCEDURE spDownloadVideo 'Thermo','omer'
@Course VARCHAR(20),
@Teacher VARCHAR(50)
AS
BEGIN
	SELECT VideoName, VideoLink FROM Videos
	WHERE (Teacher = (SELECT School_ID FROM Users WHERE First_Name = @Teacher) AND (Course = @Course))
END













-----------------------------------------------------ROUGH----------------------------------------
INSERT INTO Roles(Email, [Role])
VALUES ('maimoona.akram@lhr.edu.pk', 'Teacher')
SELECT * FROM Roles
--------------------------------------------------------------------------------------------------
