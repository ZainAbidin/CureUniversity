USE [Cure_University]
GO

/****** Object:  Table [dbo].[Employees]    Script Date: 10/28/2020 2:38:40 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Users](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[School_ID] [int],
	[First_Name] [nvarchar](20) NULL,
	[Last_Name] [nvarchar](20) NULL,
	[Adress] [nvarchar](80) NULL,
	[Email] [nvarchar] (50) NULL,
	[Contact_Number] [varchar](12) NULL,
 CONSTRAINT [PK_Employees] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO



ALTER TABLE Users
ADD Username VARCHAR(40)
ALTER TABLE Users
ADD PRIMARY KEY(ID)

CREATE TABLE Roles (Email VARCHAR(40), [Role] VARCHAR(10), [Password] VARCHAR(10))




CREATE OR ALTER PROCEDURE spCheckCredentials
@Email VARCHAR(40),
@Password VARCHAR(10)
AS
BEGIN
	SELECT [Role] FROM Roles WHERE (Email=@Email AND [Password]=@Password)
END

EXEC VerifyUser 1582,'asdfzxc'


CREATE OR ALTER PROCEDURE spstudentSignup
@Email VARCHAR(40),
@FirstName VARCHAR(20),
@LastName VARCHAR(20),
@Address VARCHAR(80),
@SchoolId INT,
@Contact_Number VARCHAR(12),
@Password VARCHAR(20),
@Username VARCHAR(40)
AS
DECLARE @ResultValue int 

If(SELECT 1 FROM Users WHERE Email = @Email) > 0
BEGIN
	SET  @ResultValue = 0  --user exists
END
ELSE
BEGIN
	INSERT INTO Users(School_ID,First_Name,Last_Name,Adress,Email,Contact_Number,Username)
	VALUES (@SchoolId,@FirstName,@LastName,@Address,@Email,@Contact_Number,@Username)
	INSERT INTO Roles(Email,[Role],[Password])
	VALUES (@Email,'Student',@Password)
	INSERT INTO COURSES(SchoolId,Course)
	VALUES (@SchoolId,'')
	SET  @ResultValue = 1  --new user is registered
END

CREATE TABLE COURSES (SchoolId INT, Course VARCHAR(60))
--------------------------------------------------------------------------------------------------------
---------------------------------SP To Register Course By Student---------------------------------------


CREATE OR ALTER PROCEDURE spCourseRegister
@Email VARCHAR (100),
@CourseName VARCHAR(20)
AS
BEGIN

	IF(((SELECT 1 FROM (SELECT * FROM COURSES WHERE SchoolId = (SELECT School_ID FROM Users WHERE Email=@Email)) AS Coursess WHERE Course = @CourseName)) > 0)
	BEGIN
	PRINT'ALREADY REGISTERED IN THIS COURSE'
	SELECT 0
	END
	ELSE
	BEGIN
	INSERT INTO COURSES(SchoolId, Course)
	VALUES ((SELECT School_ID FROM Users WHERE Email=@Email),@CourseName)
	SELECT 1
	PRINT'Course Registered'
	END
END
-------------------------------------------------------------------------------------------------------
EXECUTE spCourseRegister 2585,'Thermodynamics'
-------------------------------------------------------------------------------------------------------
---------------------------------------sp To show the number of credit hours registered----------------

CREATE OR ALTER PROCEDURE spShowCredits
AS
BEGIN

	SELECT SUM(CreditHours)
	FROM (	SELECT CourseDetails.CreditHours 
	FROM (SELECT SchoolId,Course FROM COURSES WHERE SchoolId = 1582) AS Tabl
	INNER JOIN CourseDetails
	ON CourseDetails.CourseName = Tabl.Course) AS CreditHours
	
END

-------------------------------------------------------------------------------------------------------



------------------------------------SP to update the student profile----------------------------------
CREATE OR ALTER PROCEDURE spUpdateStudent
@reference VARCHAR(100),
@Username VARCHAR(100),
@FirstName VARCHAR(100),
@LastName VARCHAR(100),
@Contact_Number VARCHAR(100),
@Email VARCHAR(100),
@Address VARCHAR(500)

AS

BEGIN
	UPDATE Users SET First_Name = @FirstName, Last_Name = @LastName, Adress = @Address, Email = @Email, Contact_Number = @Contact_Number, Username=@Username WHERE School_ID = (SELECT School_ID FROM Users WHERE Email=@reference)
	SELECT 1
END
GO

--------------------------------------------------------------------------------------------------------
EXEC spUpdateStudent 'zain@gmail.com','','','','','',''
SELECT * FROM Users

UPDATE Users SET First_Name = '', Last_Name = '', Adress = '', Email = '', Contact_Number = '', Username='' WHERE School_ID = (SELECT School_ID FROM Users WHERE Email='omer.saleem@lhr.edu.pk')

exec spUpdateStudent @Email=N'zain@gmail.com',@Address=N'Khuram Block, Canal Bank',@FirstName=N'zain',@LastName=N'ddddddddddddd',@reference=N'zain@gmail.com',@Contact_Number=N'332-4323914',@Username=N'zain.abidin'

exec spUpdateStudent @Email=N'my.saleem@gmail.com',@Address=N'kfjhags',@FirstName=N'myName',@LastName=N'alskfjfas',
@reference=N'omer.saleem@gmail.com',@Contact_Number=N'552-9632587',@Username=N'z.s'

UPDATE Users SET First_Name = 'lkdjfl', Last_Name = 'alskfjfas', Adress = 'kfjhags', Email = 'omer.saleem@gmail.com', Contact_Number = '552-9632587', 
Username='z.s' WHERE School_ID = (SELECT School_ID FROM Users WHERE Email='omer.saleem@lhr.edu.pk')

SELECT School_ID FROM Users WHERE Email='omer.saleem@lhr.edu.pk'

---------------------------------Sp to suspend OR Block the entity--------------------------------------

ALTER TABLE Users
ADD Activity VARCHAR(9)

CREATE OR ALTER PROCEDURE spSuspend
@SchoolID INT,
@Choice INT
AS
BEGIN
			if(@Choice = 0)
			BEGIN
			if(select 1 from Users where School_ID = @SchoolID AND Activity='Active') > 0
			BEGIN
			update Users set Activity='Blocked' where School_ID = @SchoolID
			SELECT 0
			END
			ELSE IF (select 1 from Users where School_ID = @SchoolID) > 0
			BEGIN
			update Users set Activity='Active' where School_ID = @SchoolID
			SELECT 0
			END
			END
			ELSE IF(@Choice = 1)
			BEGIN
			if(select 1 from Users where School_ID = @SchoolID AND Activity='Active') > 0
			BEGIN
			update Users set Activity='Suspended' where School_ID = @SchoolID
			SELECT 0
			END
			ELSE IF (select 1 from Users where School_ID = @SchoolID) > 0
			BEGIN
			update Users set Activity='Active' where School_ID = @SchoolID
			SELECT 0
			END
			END
			ELSE
			BEGIN
			SELECT 1
			END
END

-------------------------------------------------------------------------------------------------------
EXECUTE spSuspend 1552,0
-------------------------------------------------------------------------------------------------------

---------------------------------SP to view all Students by Admin-----------------------------------------------
		CREATE VIEW [All students]
		AS
		SELECT School_ID, First_Name, Last_Name, Adress, Email, Contact_Number, Username, Activity, COURSES.Course
		FROM Users 
		LEFT join COURSES
		ON Users.School_ID = SchoolId WHERE (School_ID < 4000)

CREATE OR ALTER PROCEDURE spViewAllStudents
AS
BEGIN 

		SELECT * FROM [All students]

END
------------------------------------------------------------------------------------------------------
EXECUTE spViewAllStudents
------------------------------------------------------------------------------------------------------


---------------------------------SP to view all Teachers----------------------------------------------
		CREATE VIEW [All Teachers]
		AS
		SELECT School_ID, First_Name, Last_Name, Adress, Email, Contact_Number, Username, Activity, COURSES.Course
		FROM Users 
		LEFT join COURSES
		ON Users.School_ID = SchoolId WHERE (School_ID < 7000) AND (School_ID > 5999)
CREATE OR ALTER PROCEDURE spViewAllTeachers
AS
BEGIN
		SELECT * FROM [All Teachers]
END
------------------------------------------------------------------------------------------------------
EXECUTE spViewAllTeachers
------------------------------------------------------------------------------------------------------

CREATE TABLE [dbo].[Messages] (SchoolID INT, [Message] VARCHAR(80))

---------------------------------SP to Send Message---------------------------------------------------
CREATE OR ALTER PROCEDURE spMessage
@SchoolID INT,
@message VARCHAR(255)
AS
BEGIN
	SELECT 1 FROM [dbo].[Messages] WHERE SchoolID = @SchoolID

	UPDATE [dbo].[Messages] SET [Message] = @message WHERE SchoolID = @SchoolID

END
----------------------------------------------------------------------------------------------------
EXECUTE spMessage 2585,'Hello'
----------------------------------------------------------------------------------------------------

-----------------------SP to read messages---------------------------------------------------------

CREATE OR ALTER PROCEDURE spReadMessage
@SchoolID INT
AS
BEGIN
	SELECT [Message] FROM [dbo].[Messages] WHERE SchoolID=@SchoolID
END

--------------------------------------------------------------------------------------------------
EXECUTE spReadMessage 2585
--------------------------------------------------------------------------------------------------
-----------------------------------SP View Teachers for a specific course-------------------------

CREATE OR ALTER PROCEDURE spChooseTeacher
@Course VARCHAR(20)
AS
BEGIN
	SELECT * FROM COURSES WHERE Course = @Course
END

--------------------------------------------------------------------------------------------------
EXECUTE spChooseTeacher 'Calculus,'
--------------------------------------------------------------------------------------------------

-------------------------------------sp to select a single row form the users table --------------

CREATE OR ALTER PROCEDURE spuserIdentify 
@Email VARCHAR(40)
AS
BEGIN
	SELECT * FROM Users WHERE School_ID =  (SELECT School_ID FROM Users WHERE Email=@Email)

END
---------------------------------------------------------------------------------------------------
---------------------------------------Table creation Course details-------------------------------
CREATE Table CourseDetails (CourseName VARCHAR(40), CreditHours INT)
--------------------------------------------------------------------------------------------------


SELECT *FROM Users
SELECT *FROM [Roles]
SELECT *FROM COURSES
SELECT * FROM CourseDetails

--------------------------------------------------------------------------------------------------
----------------------------Sp to show courses to the student-------------------------------------
CREATE OR ALTER PROCEDURE spShowCourses
AS
BEGIN
	SELECT CourseName, CreditHours FROM CourseDetails
END